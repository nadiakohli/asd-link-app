{"version":3,"file":"static/js/12.356eb3de.chunk.js","mappings":"oGA+BA,IAAe,IAA0B,6D,gHC8DzC,UAvEqB,WACnB,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KA0BA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,GAAY,EACb,GAAE,MAEH,OAAO,WACLI,aAAaF,EACd,CACF,GAAE,CAACH,KAGF,UAAC,KAAD,YACE,UAAC,EAAAM,GAAD,CAAIC,SAAO,EAAX,uBAEE,sCAFF,gCAIE,gBAAKC,IAAKC,EAAYC,IAAI,oBAE5B,UAAC,KAAD,YACE,kBAAMC,SAjCW,SAACC,GACtBA,EAAEC,iBACFC,EAAAA,EAAAA,IAAA,gBAAmBhB,EAAUiB,MAAM,KAAKC,QACrCC,MAAK,SAACC,GAAD,OAASrB,EAAYqB,EAAIC,KAAzB,IACLC,OAAM,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,QAAQC,MAAMF,EAAhC,GACV,EA4BK,WACE,SAAC,KAAD,CACEG,KAAK,YACLC,SA7BW,SAAC,GAAD,IAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2B3B,EAAa2B,EAAxC,EA8BXA,MAAO5B,KAET,SAAC,KAAD,CAAQ8B,KAAK,SAAb,+BAED9B,EAAU+B,OAAOC,QAAUlC,EAASkC,QAEjC,UAAC,KAAD,YACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAUC,QApCL,WACjB9B,GAAY,GACZ+B,UAAUC,UAAUC,UAAUtC,EAC/B,EAiCa,WACE,SAAC,KAAD,CAAOY,IAAK2B,EAAAA,EAAUzB,IAAI,cACzBd,OAGJI,GAEG,UAAC,KAAD,sBAEE,gBAAKQ,IAAK4B,EAAW1B,IAAI,kBAG3B,QAGN,UAIX,C,0TCzFY2B,EAAUC,EAAAA,GAAAA,IAAH,oIAQPhC,EAAKgC,EAAAA,GAAAA,GAAH,61BAyCE,qBAAG/B,QAAyB,OAAS,MAArC,IACJ,qBAAGA,QAAyB,QAAU,EAAtC,IAII,qBAAGA,QAAyB,OAAS,MAArC,IACJ,qBAAGA,QAAyB,QAAU,EAAtC,IAIAgC,EAAYD,EAAAA,GAAAA,IAAH,qKAWTE,EAAQF,EAAAA,GAAAA,MAAAA,OAAmB,kBAKjC,CACLV,KANsC,EACtCA,MAKc,OACda,GAPsC,EAEtCA,IAKU,MACVC,aARsC,EAGtCA,cAK8B,MAC9BC,YATsC,EAItCA,aAK4B,iCATU,GAAnBL,CAAH,4pCAwELM,EAAQN,EAAAA,GAAAA,IAAH,6rBAiCLO,EAASP,EAAAA,GAAAA,OAAH,guBAIH,qBAAG/B,QAAyB,UAAY,SAAxC,IACJ,qBAAGA,QAAyB,oBAAsB,mBAAlD,IACI,qBAAGA,QAAyB,wBAA0B,uCAAtD,IAKL,qBAAGA,QAAyB,UAAY,MAAxC,IA6BEuC,EAAWR,EAAAA,GAAAA,IAAH,0mBAgCRS,EAAQT,EAAAA,GAAAA,IAAH,2EAMLU,EAAYV,EAAAA,GAAAA,IAAH,uIAQTW,EAAeX,EAAAA,GAAAA,EAAH,8uB,8CCrQzB,IAAexB,IAAAA,OAAa,CAC1BoC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,gBAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,kBACrBC,QAAS,CACP,eAAgB,qB","sources":["assets/images/svg/copySolid.svg","components/ValidateLink.jsx","components/styled.js","config/axios.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCopySolid(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#AAAAAA\",\n    d: \"M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopySolid);\nexport default __webpack_public_path__ + \"static/media/copySolid.95f7889612f6e2623ebe3a7900c1be0f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\nimport axios from 'config/axios';\n\n// Images\nimport copyIcon from 'assets/images/svg/copySolid.svg';\nimport wavingHand from 'assets/images/webp/wavingHand.webp';\nimport winkEmoji from 'assets/images/webp/winkEmoji.webp';\n\n// Styles\nimport {\n  Wrapper,\n  H1,\n  Container,\n  Input,\n  Button,\n  Block,\n  TextLink,\n  Image,\n  BlockWrap,\n  Notification,\n} from 'components/styled';\n\nconst ValidateLink = () => {\n  const [fullLink, setFullLink] = useState('');\n  const [shortLink, setShortLink] = useState('');\n  const [isCopied, setIsCopied] = useState(false);\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    axios.get(`links/${shortLink.split('/').pop()}`)\n      .then((res) => setFullLink(res.data))\n      .catch(({ response }) => console.error(response));\n  };\n\n  const handleChange = ({ target: { value } }) => setShortLink(value);\n\n  const handleCopy = () => {\n    setIsCopied(true);\n    navigator.clipboard.writeText(fullLink);\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsCopied(false);\n    }, 1500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [isCopied]);\n\n  return (\n    <Wrapper>\n      <H1 primary>\n        Paste the\n        <span> short </span>\n        link to get its origin state\n        <img src={wavingHand} alt=\"waving hand\" />\n      </H1>\n      <Container>\n        <form onSubmit={onHandleSubmit}>\n          <Input\n            name=\"shortLink\"\n            onChange={handleChange}\n            value={shortLink}\n          />\n          <Button type=\"submit\">Get full link!</Button>\n        </form>\n        {shortLink.trim().length && fullLink.length\n          ? (\n            <BlockWrap>\n              <Block>\n                <TextLink onClick={handleCopy}>\n                  <Image src={copyIcon} alt=\"copy icon\" />\n                  {fullLink}\n                </TextLink>\n              </Block>\n              {isCopied\n                ? (\n                  <Notification>\n                    Copied!\n                    <img src={winkEmoji} alt=\"wink emoji\" />\n                  </Notification>\n                )\n                : null}\n            </BlockWrap>\n          )\n          : null}\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default ValidateLink;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: 100vh;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const H1 = styled.h1`\n  text-align: center;\n  font-family: 'Inter-Medium', sans-serif;\n  font-size: 30px;\n  color: #000;\n  \n  & span {\n    color: #5380EA;\n  }\n\n  & img {\n    margin: 0 10px;\n    width: 31px;\n\n    @media screen and (max-width: 1280px) {\n      width: 29px;\n    }\n\n    @media screen and (max-width: 768px) {\n      width: 26px;\n    }\n\n    @media screen and (max-width: 480px) {\n      width: 21px;\n    }\n\n    @media screen and (max-width: 320px) {\n      width: 18px;\n      margin: 0 5px;\n    }\n  }\n  \n  @media screen and (max-width: 1280px) {\n    font-size: 28px;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 25px;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: ${({ primary }) => (primary ? '20px' : '22px')};\n    width: ${({ primary }) => (primary ? '350px' : '')};;\n  }\n\n  @media screen and (max-width: 320px) {\n    font-size: ${({ primary }) => (primary ? '14px' : '16px')};\n    width: ${({ primary }) => (primary ? '250px' : '')};\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & form {\n    text-align: center;\n  }\n`;\n\nexport const Input = styled.input.attrs(({\n  type,\n  id,\n  autoComplete,\n  placeholder,\n}) => ({\n  type: type || 'text',\n  id: id || 'url',\n  autoComplete: autoComplete || 'off',\n  placeholder: placeholder || 'http://type-your-link.here ...',\n}))`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  width: 370px;\n  padding: 16px;\n  background: #F9FAFF;\n  border: 1px solid #DEE6FF;\n  border-radius: 5px;\n  font-size: 17px;\n  margin-top: 25px;\n\n  &::placeholder {\n    font-family: 'Inter-Medium', sans-serif;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    color: #aaa;\n\n    @media screen and (max-width: 1280px) {\n      font-size: 15px;\n    }\n\n    @media screen and (max-width: 768px) {\n      font-size: 12px;\n    }\n\n    @media screen and (max-width: 480px) {\n      font-size: 11px;\n    }\n\n    @media screen and (max-width: 320px) {\n      font-size: 10px;\n    }\n  }\n\n  @media screen and (max-width: 1280px) {\n    padding: 15px;\n    font-size: 15px;\n    width: 350px;\n  }\n\n  @media screen and (max-width: 768px) {\n    padding: 13px;\n    width: 330px;\n    font-size: 12px;\n  }\n\n  @media screen and (max-width: 480px) {\n    padding: 10px;\n    width: 280px;\n    font-size: 11px;\n  }\n\n  @media screen and (max-width: 320px) {\n    padding: 8px;\n    width: 205px;\n    font-size: 10px;\n    margin-top: 15px;\n  }\n`;\n\nexport const Block = styled.div`\n  background: #F6FBF8;\n  box-shadow: 0px 24px 24px rgba(0, 0, 0, 0.08);\n  backdrop-filter: blur(4px);\n  border-radius: 10px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 435px;\n  max-height: 400px;\n  text-align: center;\n  margin-bottom: 10px;\n\n  @media screen and (max-width: 1280px) {\n    box-shadow: 0px 16px 16px rgba(0, 0, 0, 0.08);\n    border-radius: 6px;\n    min-width: 420px;\n  }\n\n  @media screen and (max-width: 768px) {\n    min-width: 385px;\n  }\n  \n  @media screen and (max-width: 480px) {\n    min-width: 365px;\n  }\n\n  @media screen and (max-width: 320px) {\n    min-width: 275px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 25px 0;\n  width: 200px;\n  height: 51px;\n  background: ${({ primary }) => (primary ? '#ffd5cf' : '#5380EA')};\n  border: ${({ primary }) => (primary ? '1px solid #ff725e' : '1px solid #5380EA')}; \n  box-shadow: ${({ primary }) => (primary ? '0px 10px 34px #ffd5cf' : '0px 10px 34px rgba(83, 128, 234, 0.5)')};\n  border-radius: 40px;\n  font-family: 'Inter-Medium', sans-serif;\n  font-weight: 700;\n  font-size: 16px;\n  color: ${({ primary }) => (primary ? '#ff725e' : '#fff')};\n  cursor: pointer;\n\n  @media screen and (max-width: 1280px) {\n    width: 165px;\n    height: 46px;\n    font-size: 15px;\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 135px;\n    height: 40px;\n    font-size: 13px;\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 115px;\n    height: 34px;\n    font-size: 11px;\n  }\n\n  @media screen and (max-width: 320px) {\n    width: 108px;\n    height: 32px;\n    font-size: 10px;\n    margin: 15px 0;\n  }\n`;\n\nexport const TextLink = styled.div`\n  display: wrap;\n  overflow-wrap: break-word;\n  font-family: 'Inter-Medium', sans-serif;\n  font-weight: 500;\n  font-size: 22px;\n  color: #656565;\n  padding: 25px;\n  max-width: 420px;\n  max-height: 600px;\n  \n  @media screen and (max-width: 1280px) {\n    font-size: 20px;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 18px;\n    max-width: 400px;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 16px;\n    max-width: 365px;\n  }\n\n  @media screen and (max-width: 320px) {\n    font-size: 14px;\n    max-width: 275px;\n    padding: 18px 10px;\n  }\n`;\n\nexport const Image = styled.img`\n  margin: 0 5px;\n  width: 10px;\n  height: 100%;\n`;\n\nexport const BlockWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #656565;\n  position: relative;\n`;\n\nexport const Notification = styled.p`\n  font-size: 18px;\n  position: absolute;\n  top: -26px;\n  right: 7px;\n\n  & img {\n    width: 17px;\n    margin-left: 5px;\n\n    @media screen and (max-width: 1280px) {\n      width: 16px;\n    }\n\n    @media screen and (max-width: 768px) {\n      width: 14px;\n    }\n\n    @media screen and (max-width: 480px) {\n      width: 12px;\n    }\n\n    @media screen and (max-width: 320px) {\n      width: 10px;\n    }\n  }\n\n  @media screen and (max-width: 1280px) {\n    font-size: 16px;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 12px;\n  }\n\n  @media screen and (max-width: 320px) {\n    font-size: 10px;\n    top: -20px;\n  }\n`;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n"],"names":["useState","fullLink","setFullLink","shortLink","setShortLink","isCopied","setIsCopied","useEffect","timer","setTimeout","clearTimeout","H1","primary","src","wavingHand","alt","onSubmit","e","preventDefault","axios","split","pop","then","res","data","catch","response","console","error","name","onChange","value","target","type","trim","length","onClick","navigator","clipboard","writeText","copyIcon","winkEmoji","Wrapper","styled","Container","Input","id","autoComplete","placeholder","Block","Button","TextLink","Image","BlockWrap","Notification","baseURL","process","REACT_APP_API_URL","headers"],"sourceRoot":""}